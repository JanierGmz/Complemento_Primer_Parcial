/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.vista;

import com.controlador.ControladorMercado;
import com.modelo.Accion;
import com.observadores.NotificadorSMS;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Janier Yulder Gomez Galindez
 * @author Harold Andres Molano Rosero
 */
public class GUIMercadoValores extends javax.swing.JFrame {
    private ControladorMercado controller = new ControladorMercado();
    String[] columnNames = {"Accion", "Precio Actual", "Umbral Inferior","Umbral Superior"};
    /**
     * Creates new form GUIMercadoValores
     */
    public GUIMercadoValores() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregarAccion = new javax.swing.JButton();
        btnEliminarAccion = new javax.swing.JButton();
        btnEditarAccion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInformacion = new javax.swing.JTable();
        btnAgregarInteresado = new javax.swing.JButton();
        btnActualizarUmbrales = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAgregarAccion.setText("Agregar Accion");
        btnAgregarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAccionActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarAccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        btnEliminarAccion.setText("Eliminar Accion");
        btnEliminarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAccionActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminarAccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, -1, -1));

        btnEditarAccion.setText("Cambiar precio Accion");
        btnEditarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarAccionActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditarAccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        tblInformacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Accion", "Precio Actual", "Umbral Inferior", "Umbral Superior"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInformacion);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, 180));

        btnAgregarInteresado.setText("Agregar Interesado");
        btnAgregarInteresado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarInteresadoActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarInteresado, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        btnActualizarUmbrales.setText("Actualizar Umbrales");
        btnActualizarUmbrales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarUmbralesActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizarUmbrales, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAccionActionPerformed
        String nombreString=JOptionPane.showInputDialog("Nombre de la acciona eliminar");
        controller.eliminarAccion(nombreString);
        actualizarTabla();
    }//GEN-LAST:event_btnEliminarAccionActionPerformed

    private void btnAgregarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAccionActionPerformed
        boolean flag = true;
        String nombreString=JOptionPane.showInputDialog("Nombre de la accion");
        if(controller.existeAccion(nombreString)){
            JOptionPane.showMessageDialog(null, "Esta accion ya existe.");
            return;
        }
        double precio = Double.parseDouble(JOptionPane.showInputDialog("Precio de la accion"));
        
        controller.agregarAccion(nombreString, precio);
        do{
            double umbralInf=Double.parseDouble(JOptionPane.showInputDialog("Umbral Inferior"));
            double umbralSup=Double.parseDouble(JOptionPane.showInputDialog("Umbral Superior"));
            flag = controller.establecerUmbrales(nombreString,umbralInf,umbralSup);
            if(!flag){
                JOptionPane.showMessageDialog(null, "Umbrales no definidos correctamente");
            }
        }while(!flag);
        
        JOptionPane.showMessageDialog(null, "Accion agregada exitosamente");
        actualizarTabla();
        
    }//GEN-LAST:event_btnAgregarAccionActionPerformed

    private void btnEditarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarAccionActionPerformed
        String nombreString=JOptionPane.showInputDialog("Nombre de la accion");
        if(!controller.existeAccion(nombreString)){
            JOptionPane.showMessageDialog(null, "Esta accion no existe");
            return;
        }
        double precio = Double.parseDouble(JOptionPane.showInputDialog("Nuevo Precio de la accion"));
        
        controller.actualizarPrecioAccion(nombreString, precio);
        actualizarTabla();
    }//GEN-LAST:event_btnEditarAccionActionPerformed

    private void btnAgregarInteresadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarInteresadoActionPerformed
        String nombreString=JOptionPane.showInputDialog("Nombre de la accion");
        if(!controller.existeAccion(nombreString)){
            JOptionPane.showMessageDialog(null, "Esta accion no existe");
            return;
        }
        String telefono=JOptionPane.showInputDialog("Numero de telefono del Interesado");
        NotificadorSMS notificadorSMS = new NotificadorSMS(telefono);
        controller.agregarObservador(nombreString, notificadorSMS);
        JOptionPane.showMessageDialog(null, "Interesado agregado exitosamente");
    }//GEN-LAST:event_btnAgregarInteresadoActionPerformed

    private void btnActualizarUmbralesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarUmbralesActionPerformed
         boolean flag = true;
        String nombreString=JOptionPane.showInputDialog("Nombre de la accion");
        if(!controller.existeAccion(nombreString)){
            JOptionPane.showMessageDialog(null, "Esta accion no existe");
            return;
        }
        do{
            double umbralInf=Double.parseDouble(JOptionPane.showInputDialog("Umbral Inferior"));
            double umbralSup=Double.parseDouble(JOptionPane.showInputDialog("Umbral Superior"));
            flag = controller.establecerUmbrales(nombreString,umbralInf,umbralSup);
            if(!flag){
                JOptionPane.showMessageDialog(null, "Umbrales no definidos correctamente");
            }
        }while(!flag);
        actualizarTabla();
    }//GEN-LAST:event_btnActualizarUmbralesActionPerformed

    public void actualizarTabla(){
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        // Agregar filas a partir de la lista de objetos
        for (Accion acciones : controller.obtenerAcciones()) {
            Object[] rowData = {acciones.getNombre(),acciones.getPrecioActual(),acciones.getUmbralInferior(),acciones.getUmbralSuperior()};
            model.addRow(rowData);
        }
        tblInformacion.setModel(model);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarUmbrales;
    private javax.swing.JButton btnAgregarAccion;
    private javax.swing.JButton btnAgregarInteresado;
    private javax.swing.JButton btnEditarAccion;
    private javax.swing.JButton btnEliminarAccion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInformacion;
    // End of variables declaration//GEN-END:variables
}
